geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/GFDL-ESM4.pdf', p, scale = 1.3, width = 8, height = 2.5)
library(tidyverse)
library(ggtext)
library(hrbrthemes)
library(scales)
## GFDL-ESM4
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-10.5,	-10.6,	-10.4,	-10.5,	-10.6,	-10.7,	-10.4,	-10.7,	-11.2,	-11.6,	-11.5,	-11.6, 'E(NO<sub>X</sub>)',
-10.5,	-10.1,	-9.8,	-9.7,	-9.7,	-9.7,	-9.3,	-9.6,	-19.3,	-9.9,	-9.6,	-8.8, 'E(NMVOC)',
-11.1,	-11.1,	-11.2,	-11.4,	-11.3,	-11.4,	-11.2,	-11.6,	-12.2,	-11.5,	-11.7,	-11.7, 'Net(O<sub>3</sub>)',
-0.82,	-1.84,	-1.91,	-0.5,	-0.44,	-0.51,	-0.11,	0.47,	0.32,	0.36,	0.22,	0.98, 'S<sub>N</sub>',
0.79,	2.31,	2.57,	1.06,	0.8,	0.83,	0.44,	1.13,	0.18,	0.12,	0.14,	0.24, 'S<sub>V</sub>',
-1.04,	-0.8,	-0.74,	-0.47,	-0.55,	-0.62,	-0.24,	0.42,	1.73,	3.05,	1.65,	4.07, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/GFDL-ESM4.pdf', p, scale = 1.3, width = 8, height = 2.5)
## EC-Earth3-AerChem
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-10.4,	-10.6,	-10.4,	-10.6,	-10.6,	-10.7,	-10.4,	-10.6,	-11.2,	-11.5,	-11.4,	-11.2, 'E(NO<sub>X</sub>)',
-11.7,	-11.4,	-11.1,	-11.3,	-11.2,	-11.1,	-9.7,	-10.1,	-11.7,	-9.8,	-11.3,	-9.4, 'E(NMVOC)',
-11.3,	-11.5,	-11.3,	-11.3,	-11.1,	-11.1,	-10.9,	-11.1,	-11.6,	-11.2,	-11.7,	-11.3, 'Net(O<sub>3</sub>)',
-0.13,	-1.75,	-1.51,	-1.05,	-0.66,	-0.13,	0.21,	0.71,	0.07,	0.23,	0.21,	0.58, 'S<sub>N</sub>',
0.21,	1.51,	1.41,	0.85,	0.66,	0.45,	0.74,	0.72,	0.04,	0.16,	0.09,	0.35, 'S<sub>V</sub>',
-0.63,	-1.16,	-1.07,	-1.23,	-1.01,	-0.29,	0.27,	0.99,	1.71,	1.37,	2.25,	1.66, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/EC-Earth3.pdf', p, scale = 1.3, width = 8, height = 2.5)
## GISS-E2-1
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-11.5,	-10.6,	-10.4,	-10.6,	-10.6,	-10.8,	-10.4,	-10.7,	-12.1,	-11.6,	-11.4,	-11.1, 'E(NO<sub>X</sub>)',
-10.3,	-10.5,	-10.0,	-10.3,	-10.0,	-9.6,	-9.3,	-9.8,	-9.9,	-9.4,	-10.8,	-9.0, 'E(NMVOC)',
-11.9,	-11.6,	-11.3,	-11.3,	-11.2,	-11.2,	-10.8,	-10.3,	-11.4,	-11.9,	-11.9,	-11.7, 'Net(O<sub>3</sub>)',
0.35,	0.13,	0.58,	0.52,	0.37,	0.32,	0.89,	0.81,	0.43,	0.89,	0.45,	0.81, 'S<sub>N</sub>',
0.68,	0.96,	0.72,	0.76,	0.52,	0.64,	0.68,	0.79,	0.19,	0.25,	0.22,	0.32, 'S<sub>V</sub>',
0.51,	0.14,	0.81,	0.69,	0.71,	0.51,	1.31,	1.03,	2.23,	3.58,	2.04,	2.51, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/GISS-E2-1.pdf', p, scale = 1.3, width = 8, height = 2.5)
## MRI-ESM2-0
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-11.5,	-10.7,	-10.5,	-10.7,	-10.5,	-10.8,	-10.4,	-10.6,	-11.1,	-11.4,	-11.4,	-11.2, 'E(NO<sub>X</sub>)',
-11.3,	-11.1,	-10.8,	-11.1,	-10.7,	-10.7,	-10.3,	-10.7,	-10.9,	-9.9,	-10.6,	-9.3, 'E(NMVOC)',
-12,	-11.9,	-11.6,	-11.4,	-11.3,	-11.2,	-10.7,	-10.9,	-11.6,	-11.5,	-11.8,	-11.1, 'Net(O<sub>3</sub>)',
-0.87,	-3.41,	-1.43,	-0.94,	-0.84,	-0.32,	-0.47,	0.61,	0.37,	0.52,	0.67,	1.27, 'S<sub>N</sub>',
1.58,	3.76,	2.97,	1.48,	1.56,	0.95,	0.57,	0.52,	0.25,	0.22,	0.21,	0.52, 'S<sub>V</sub>',
-0.53,	-0.91,	-0.48,	-0.63,	-0.54,	-0.33,	-0.84,	1.17,	1.48,	2.39,	3.23,	2.44, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/MRI-ESM2-0.pdf', p, scale = 1.3, width = 8, height = 2.5)
## UKESM1-0-LL
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-11.2,	-10.3,	-10.1,	-10.2,	-10.3,	-10.4,	-10.1,	-10.4,	-10.9,	-11.4,	-11.2,	-11.2, 'E(NO<sub>X</sub>)',
-10.6,	-10.7,	-10.4,	-10.2,	-10.4,	-10.2,	-9.9,	-9.8,	-11.5,	-10,	-10.7,	-9.2, 'E(NMVOC)',
-11.9,	-12.1,	-12,	-11.6,	-11.6,	-11.4,	-11,	-11.3,	-11.1,	-11.7,	-11.9,	-11.5, 'Net(O<sub>3</sub>)',
-0.45,	-0.51,	-0.74,	-0.52,	-0.35,	0.06,	0.29,	0.49,	0.33,	0.46,	0.43,	1.33, 'S<sub>N</sub>',
0.51,	2.25,	2.13,	1.58,	1.22,	1.02,	0.65,	0.77,	0.34,	0.15,	0.11,	1.44, 'S<sub>V</sub>',
0.91,	-0.23,	-0.35,	-0.33,	-0.28,	0.05,	0.46,	0.66,	0.99,	3.14,	4.15,	0.92, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/UKESM1-0-LL.pdf', p, scale = 1.3, width = 8, height = 2.5)
## GFDL-ESM4
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-10.5,	-10.6,	-10.4,	-10.5,	-10.6,	-10.7,	-10.4,	-10.7,	-11.2,	-11.6,	-11.5,	-11.6, 'E(NO<sub>X</sub>)',
-10.5,	-10.1,	-9.8,	-9.7,	-9.7,	-9.7,	-9.3,	-9.6,	-19.3,	-9.9,	-10.6,	-8.8, 'E(NMVOC)',
-11.1,	-11.1,	-11.2,	-11.4,	-11.3,	-11.4,	-11.2,	-11.6,	-12.2,	-11.5,	-11.7,	-11.7, 'Net(O<sub>3</sub>)',
-0.82,	-1.84,	-1.91,	-0.5,	-0.44,	-0.51,	-0.11,	0.47,	0.32,	0.36,	0.22,	0.98, 'S<sub>N</sub>',
0.79,	2.31,	2.57,	1.06,	0.8,	0.83,	0.44,	1.13,	0.18,	0.12,	0.14,	0.24, 'S<sub>V</sub>',
-1.04,	-0.8,	-0.74,	-0.47,	-0.55,	-0.62,	-0.24,	0.42,	1.73,	3.05,	1.65,	4.07, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/GFDL-ESM4.pdf', p, scale = 1.3, width = 8, height = 2.5)
## MRI-ESM2-0
p = tribble(~ `GBR (V<sub>S</sub>)`,	~ `GER (V<sub>S</sub>)`,	~ `JPN (V<sub>S</sub>)`,	~`JJJ (V<sub>S</sub>)`,	~`NY (V<sub>S</sub>)`,	~`CY (V)`,	~`IND (V)`,	~`LA (T)`,	~`CAN (T)`,	~`QTP (N)`,	~`COG (N)`,	~`AUS (N)`, ~ rowname,
-11.5,	-10.7,	-10.5,	-10.7,	-10.5,	-10.8,	-10.4,	-10.6,	-11.1,	-11.4,	-11.4,	-11.2, 'E(NO<sub>X</sub>)',
-11.3,	-11.1,	-10.8,	-11.1,	-10.7,	-10.7,	-10.3,	-10.7,	-10.9,	-9.9,	-10.6,	-9.3, 'E(NMVOC)',
-12,	-11.9,	-11.6,	-11.4,	-11.3,	-11.2,	-10.7,	-10.9,	-11.6,	-11.5,	-11.8,	-11.1, 'Net(O<sub>3</sub>)',
-0.87,	-3.41,	-1.43,	-0.94,	-0.84,	-0.32,	-0.47,	0.61,	0.37,	0.52,	0.67,	1.27, 'S<sub>N</sub>',
1.58,	3.76,	2.97,	1.48,	1.56,	0.95,	0.57,	0.52,	0.25,	0.22,	0.21,	0.52, 'S<sub>V</sub>',
-0.53,	-0.91,	-0.48,	-0.63,	-0.54,	-0.33,	-0.84,	1.17,	1.48,	2.39,	3.23,	2.44, 'S<sub>N</sub>/S<sub>V</sub>') %>%
pivot_longer(-rowname) %>%
mutate(color = case_when(
name %in% c('GBR (V<sub>S</sub>)', 'GER (V<sub>S</sub>)', 'JPN (V<sub>S</sub>)', 'JJJ (V<sub>S</sub>)', 'NY (V<sub>S</sub>)') ~ MetBrewer::met.brewer('Egypt')[1],
name %in% c('CY (V)', 'IND (V)') ~ MetBrewer::met.brewer('Egypt')[2],
name %in% c('LA (T)', 'CAN (T)') ~ MetBrewer::met.brewer('Egypt')[3],
name %in% c('QTP (N)', 'COG (N)', 'AUS (N)') ~ MetBrewer::met.brewer('Egypt')[4]
),
name = str_c("<span style='color:", color, "'>", name, "</span>"),
rowname = factor(rowname,
levels = rev(c('E(NO<sub>X</sub>)', 'E(NMVOC)', 'Net(O<sub>3</sub>)',
'S<sub>N</sub>', 'S<sub>V</sub>', 'S<sub>N</sub>/S<sub>V</sub>')))) %>%
group_by(rowname) %>%
mutate(ranks = rank(value)) %>%
ungroup() %>%
mutate(value = sprintf("%0.2f", value))
p = p %>%
mutate(name = factor(name, levels = unique(p$name))) %>%
ggplot(aes(x = name, y = rowname, fill = ranks)) +
geom_tile(show.legend = F, colour = "white", size = 1) +
geom_text(aes(label = value), family = "sans", size = 5) +
theme_ipsum_rc(
panel_spacing = grid::unit(1, "lines"),
plot_margin = margin(1, 1, 1, 1),
grid = T, axis = T,
base_size = 12,
axis_title_size = 12,
strip_text_size = 12,base_family = 'sans',
) +
xlab(NULL) +
ylab(NULL) +
scale_y_discrete(expand=c(0, 0))+
scale_x_discrete(expand=c(0, 0))+
scale_fill_gradientn(
colours = MetBrewer::met.brewer('VanGogh3', n = 12)[1:6],
limits = c(1, 12),
oob = squish
) +
theme(axis.text.x = element_markdown(),
axis.text.y = element_markdown())
ggsave('/Users/csuen/Desktop/MRI-ESM2-0.pdf', p, scale = 1.3, width = 8, height = 2.5)
#loading the Splines Packages
require(splines)
#ISLR contains the Dataset
require(ISLR)
attach(Wage)
install.packages("splines")
install.packages("splines")
#loading the Splines Packages
library(splines)
setwd("/Users/csuen/Documents/GitHub/ozone-cardiovascular/Figures/Fig. 2/")
data <- read.csv("Fig. 2 mort global trend.csv", header = TRUE)
fit <- lm(y ~ bs(x, knots = c(1995,2000,2005,2010,2015)), data = data)
y = data$cvd_25_death_urban_est
x = data$year
fit <- lm(y ~ bs(x, knots = c(1995,2000,2005,2010,2015)))
summary(fit)
fit_smooth <- smooth.spline(y, x, df=5)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.y,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y = data$cvd_25_death_urban_est
x = data$year
fit <- lm(y ~ bs(x, knots = c(1995,2000,2005,2010,2015)))
summary(fit)
fit_smooth <- smooth.spline(y, x, df=5)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.y,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
fit_smooth <- smooth.spline(cvd_25_death_urban_est, year, df=5, data=data)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit <- lm(y ~ bs(x, knots = c(1995,2000,2005,2010,2015)))
summary(fit)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit <- lm(y ~ bs(x, knots = c(2000,2005,2010)))
summary(fit)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit <- lm(y ~ bs(x, knots = c(2000,2005,2010,2015)))
summary(fit)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit <- lm(y ~ bs(x, knots = c(2000,2005,2010)))
summary(fit)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y_pred = predict(fit,newdata = list(x=x.grid)
)
fit_smooth <- smooth.spline(x, y, df=16)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
fit2<-smooth.spline(x,y,cv = TRUE)
fit2
plot(x,y,col="grey")
#Plotting Regression Line
lines(fit2,lwd=2,col="purple")
legend("topright",("Smoothing Splines with 17.6 df selected by CV"),col="purple",lwd=2)
fit_smooth <- smooth.spline(x, y, df=16)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
lines(fit_smooth,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
lines(fit_smooth,col="red",lwd=2)
legend("topright",c("Smoothing Spline with 16 df","Cubic Spline"),col=c("red","darkgreen"),lwd=2)
setwd("/Users/csuen/Documents/GitHub/ozone-cardiovascular/Figures/Fig. 2/")
data <- read.csv("Fig. 2 mort global trend.csv", header = TRUE)
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit <- lm(y ~ bs(x, knots = c(2000,2005,2010)))
summary(fit)
plot(x,y,col="grey",xlab="Year",ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
y_pred = predict(fit,newdata = list(x=x.grid))
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
lines(fit_smooth,col="red",lwd=2)
setwd("/Users/csuen/Documents/GitHub/ozone-cardiovascular/Figures/Fig. 2/")
data <- read.csv("Fig. 2 mort global trend.csv", header = TRUE)
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
points(x.grid,predict(fit,newdata = list(x=x.grid)),col="darkgreen",lwd=2,type="l")
lines(fit_smooth,col="red",lwd=2)
y_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_urban_est
x = data$year
xlims<-range(x)
x.grid<-seq(from=xlims[1], to = xlims[2])
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
y_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_urban_ub
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
urban_ub_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_rural_est
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
rural_est_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_rural_est
fit_smooth <- smooth.spline(x, y, df=3)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
rural_est_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_rural_est
fit_smooth <- smooth.spline(x, y, df=6)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
rural_est_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
y = data$cvd_25_death_rural_ub
fit_smooth <- smooth.spline(x, y, df=6)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
rural_ub_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
deaths_smooth_global$year = urban_est_global_pred$x
fit_smooth <- smooth.spline(x, y, df=4)
plot(x, y, col="grey", xlab="Year", ylab="Deaths")
lines(fit_smooth,col="red",lwd=2)
urban_est_global_pred = predict(fit_smooth, newdata = list(x=x.grid))
deaths_smooth_global$year = urban_est_global_pred$x
View(urban_ub_global_pred)
View(urban_ub_global_pred)
urban_ub_global_pred
